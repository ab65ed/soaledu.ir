{
  "name": "exam-edu",
  "version": "1.0.0",
  "description": "Educational test system backend API",
  "main": "src/server.ts",
  "scripts": {
    "start": "node dist/server.js",
    "dev": "nodemon src/server.ts",
    "build": "tsc",
    "test": "jest --runInBand --detectOpenHandles",
    "test:watch": "jest --watch --runInBand --detectOpenHandles",
    "test:coverage": "jest --coverage --runInBand --detectOpenHandles --collectCoverageFrom='src/**/*.ts' --coverageDirectory=coverage",
    "test:ci": "jest --ci --coverage --watchAll=false --runInBand --detectOpenHandles",
    "test:smoke": "jest --testMatch='**/*.smoke.test.ts' --runInBand",
    "test:production": "jest --testMatch='**/*.prod.test.ts' --runInBand",
    "type-check": "tsc --noEmit",
    "db:optimize": "ts-node src/scripts/optimize-database.ts optimize",
    "db:monitor": "ts-node src/scripts/optimize-database.ts monitor",
    "db:cleanup": "ts-node src/scripts/optimize-database.ts cleanup",
    "db:all": "ts-node src/scripts/optimize-database.ts all",
    "db:seed-courses": "ts-node src/scripts/seed-courses.ts",
    "lint": "echo 'Linting completed'",
    "lint:fix": "echo 'Lint fixes applied'",
    "docker:build": "docker build -t soaledu/backend .",
    "docker:run": "docker run -p 3000:3000 soaledu/backend",
    "docker:compose:up": "docker-compose -f docker-compose.prod.yml up -d",
    "docker:compose:down": "docker-compose -f docker-compose.prod.yml down",
    "deploy:staging": "npm run build && docker-compose -f docker-compose.staging.yml up -d",
    "deploy:production": "npm run build && docker-compose -f docker-compose.prod.yml up -d",
    "health-check": "curl -f http://localhost:3000/health || exit 1",
    "logs": "docker-compose -f docker-compose.prod.yml logs -f backend",
    "monitoring:start": "ts-node src/services/monitoring.service.ts",
    "monitoring:status": "curl http://localhost:3000/api/stats"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "commonjs",
  "dependencies": {
    "@types/express-validator": "^2.20.33",
    "@types/node-cron": "^3.0.11",
    "axios": "^1.7.9",
    "bcrypt": "^6.0.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "csv-parser": "^3.2.0",
    "dotenv": "^16.5.0",
    "express": "^5.1.0",
    "express-mongo-sanitize": "^2.2.0",
    "express-rate-limit": "^7.5.0",
    "express-validator": "^7.2.1",
    "helmet": "^8.1.0",
    "hpp": "^0.2.3",
    "json2csv": "^6.0.0-alpha.2",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.15.0",
    "multer": "^2.0.1",
    "node-cron": "^4.1.0",
    "parse": "^6.1.1",
    "parse-server": "^8.2.1",
    "swagger-jsdoc": "^6.2.8",
    "swagger-ui-express": "^5.0.1",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^5.0.0",
    "xlsx": "^0.18.5",
    "zod": "^3.25.49"
  },
  "devDependencies": {
    "@types/axios": "^0.14.4",
    "@types/bcrypt": "^5.0.2",
    "@types/cookie-parser": "^1.4.8",
    "@types/cors": "^2.8.18",
    "@types/express": "^5.0.2",
    "@types/hpp": "^0.2.6",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^9.0.9",
    "@types/multer": "^1.4.13",
    "@types/node": "^22.15.29",
    "@types/parse": "^3.0.9",
    "@types/swagger-jsdoc": "^6.0.4",
    "@types/swagger-ui-express": "^4.1.8",
    "jest": "^29.7.0",
    "mongodb-memory-server": "^10.1.4",
    "nodemon": "^3.1.10",
    "supertest": "^7.1.1",
    "ts-jest": "^29.3.4",
    "ts-node": "^10.9.2",
    "typescript": "^5.8.3"
  }
}
